---
title: "Typst Format"
tbl-colwidths: [35,65]
---

{{< include _pre-release-feature.qmd >}}

## Overview

Quarto v1.4 includes support for the `typst` output format. [Typst](https://github.com/typst/typst) is a new open-source markup-based typesetting system that is designed to be as powerful as LaTeX while being much easier to learn and use. Typst creates beautiful PDF output with blazing fast render times.

One of the highlights of Typst is the ease of creating highly customized templates. For example, here are some Typst templates that you can use in Quarto as custom formats:

::: {layout-ncol=4}

![IEEE](images/typst-format-ieee.png){.lightbox group="custom-formats" fig-alt="Screenshot of a page showing a article styled according IEEE standards. The title is centered with authors below in two columns."}

![Poster](images/typst-format-poster.png){.lightbox group="custom-formats" fig-alt="Screenshot of a poster in landscape orientiation. The poster includes a logo in the top right, a title in the top left, and content arranged in three columns."}

![Letter](images/typst-format-letter.png){.lightbox group="custom-formats" fig-alt="Screenshot of a page showing a letter. A sender address is across the top of the page, followed by a recipient address left justified. The body of the letter includes a subject line in bold."}

![Dept News](images/typst-format-dept-news.png){.lightbox group="custom-formats" fig-alt="Screenshot of a page showing a department newsletter. The page is split vertically with a white column on the left and a red one on the right. An image spans across the column with the text \"Award Winning Science\" oriented to run vertically down its right side."}

:::

 Learn more about how to use them, and how to create your own in [Custom Formats](#custom-formats).

## Known Limitations

Since Typst is under active development, there are still some limitations to Quarto's Typst support:

-   Advanced page layout (e.g. using the `.column` classes as explained in [Article Layout](https://quarto.org/docs/authoring/article-layout.html)) is not implemented.

-   Various other small things might not yet be implemented. Please [let us know](https://github.com/quarto-dev/quarto-cli/issues/new/choose) if you see things that could use improvement!

## Getting Started

To try out the `typst` format:

1.  Download and install the [latest pre-release](https://quarto.org/docs/download/prerelease) of Quarto 1.4 (ensure you have installed Quarto v1.4.145 or  higher).

2.  Create a document that uses `format: typst`. For example:

    ```{.yaml filename="hello-typst.qmd"}
    ---
    title: "My document"
    format: typst
    ---

    Hello, typst!
    ```

Rendering or previewing this document will invoke the Typst CLI to create a PDF from your markdown source file. Note that Quarto includes the Typst CLI so no separate installation of Typst is required.

## Typst Format

When authoring a Typst document you'll be using a Quarto format that is in turn based on a Typst template, which defines its structure, layout, and available options. The default Typst format and template that ships with Quarto (`format: typst`) includes options for specifying title, author, and abstract information along with basic layout and appearance (numbering, margins, fonts, columns, etc.).

The following options are available for customizing Typst output:

| Option                | Description                                                                                                                                                                        |
|---------------------------|---------------------------------------------|
| `title`               | Main document title                                                                                                                                                                |
| `author`              | One or more document authors.                                                                                                                                                      |
| `date`                | Date of publication                                                                                                                                                                |
| `abstract`            | Article abstract                                                                                                                                                                   |
| `toc`                 | Include a table of contents.                                                                                                                                                       |
| `toc-depth`           | Specify the number of section levels to include in the table of contents.                                                                                                          |
| `toc-title`           | The title used for the table of contents.                                                                                                                                          |
| `number-sections`     | Apply numbering to sections and sub-sections                                                                                                                                       |
| `number-depth`        | The number of section levels that should receive numbering                                                                                                                                          |
| `section-numbering`   | Schema to use for numbering sections, e.g. `1.1.a`.                                                                                                                                |
| `margin`              | Margins: `x`, `y`, `top`, `bottom`, `left`, `right`. Specified with units (e.g. `y: 1.25in` or `x: 2cm`).                                                                          |
| `papersize`           | Paper size: `a4`, `us-letter`, etc. See the docs on [paper sizes](https://typst.app/docs/reference/layout/page/#parameters–paper) for all available sizes.                         |
| `columns`             | Number of columns for body text.                                                                                                                                                   |
| `include-in-header`   | `.typ` file to include in header                                                                                                                                                   |
| `include-before-body` | `.typ` file to include before body                                                                                                                                                 |
| `include-after-body`  | `.typ` file to include after the body                                                                                                                                              |
| `keep-typ`            | Keep the intermediate `.typ` file after render.                                                                                                                                    |
| `bibliography`        | `.bib` file to use for citations processing                                                                                                                                        |
| `bibliographystyle`   | Style to use with Typst's bibliography processing - See the doc about [bibliography](https://typst.app/docs/reference/meta/bibliography/#parameters–style) to see supported styles.|
| `citeproc`            | If `true`, Pandoc's citeproc will be used for citation processing instead of Typst's own system (which is the default).                                                            |
| `csl`                 | `.csl` file to use when Pandoc's citeproc is used.                                                                                                                                 |
| `fontsize`            | Font size (e.g., `12pt`)                                                                                                                                                           |
| `mainfont`            | Name of font to use for the main font, search among system fonts or `font-paths` if specified.                                                                                     |
| `font-paths`          | Adds additional directories to search for fonts when compiling with Typst.                                                                                                         |                                                                                                     |

For example:

``` yaml
---
title: "My Document"
format:
  typst:
    toc: true
    section-numbering: 1.1.a
    columns: 2
bibliography: refs.bib
bibliographystyle: chicago-author-date
---
```

See the section below on [Custom Formats](#custom-formats) for details on creating your own specialized formats for use with Typst.

## Page Layout

You can control the size of the page (`papersize`), the page margins (`margin`), and the number of columns used for page content (`columns`). For example, the following YAML modifies all three options:

```yaml
---
title: Page Layout
format:
  typst:
    papersize: a5
    margin:
      x: 1cm
      y: 1cm
    columns: 2
---
```

The resulting layout is shown below alongside an example of the default layout:

:::{layout-ncol=2}

![Customized Layout](images/typst-custom-page.png){.border fig-alt="Screenshot of one page of PDF document. The document shows a two columns of text. Compared to the previous screenshot, the page is narrower and longer, and the margins are smaller."}

![Default Layout](images/typst-default-page.png){.border fig-alt="Screenshot of one page of PDF document. The document shows a single column of text."}

:::

You can read more about these page layout options in the sections below.

### Paper Size

The `papersize` option expects a string matching one of Typst's supported [paper sizes](https://typst.app/docs/reference/layout/page/#parameters-paper). The default template is equivalent to:

```yaml
papersize: us-letter
```

### Margins

The `margin` option expects one or more of the suboptions: `x`, `y`, `top`, `bottom`, `left` and `right`. The default template uses margins equivalent to:

```yaml
margin:
  x: 1.25in
  y: 1.25in
```

This sets the margins in the horizontal direction (`x`), i.e. `left` and `right`, as well as the margins in the vertical direction (`y`), i.e. `top` and `bottom` to 1.25 inches.

The values for the margins are specfied using Typst's [length](https://typst.app/docs/reference/layout/length/), (e.g. `5cm`) or  [relative length](https://typst.app/docs/reference/layout/relative/) (e.g. `10%`) types. You can specify a single margin:

```yaml
margin:
  left: 1cm
```

Then, any unspecified margins will inherit from the default margins.

### Columns

The `columns` option expects a number - the number of columns your body content should have. The default template sets `columns` to `1`. 


{{< include /docs/output-formats/_document-options-toc.md >}}

{{< include /docs/output-formats/_document-options-section-numbering.md >}}

You can also customize the display of the section numbers with the `section-numbering` YAML option. This option expects a string that describes the numbering schema. For example, the following schema describes numbering sections with numerals, subsection with uppercase letters, and subsubsections with lower case letters, using `.` as a separator:

```yaml
---
section-numbering: 1.A.a
---
```

You can read more about sepcifying the numbering schema in the [Typst documentation for numbering](https://typst.app//docs/reference/model/numbering#parameters-numbering).

{{< include /docs/output-formats/_code-annotation.md >}}

## Bibliography

Typst comes with its [own citation processing system for bibliographies](https://typst.app/docs/reference/meta/bibliography/) and using `format: typst` defaults to it. To specify a bibliography style using Typst's system, use the `bibliographystyle` option. Provide a string from [Typst's list of built-in styles](https://typst.app/docs/reference/model/bibliography/#parameters-style), e.g.:

``` yaml
bibliography: refs.bib
bibliographystyle: apa
```

Or alternatively, provide a path to a local CSL file:

``` yaml
bibliography: refs.bib
bibliographystyle: my-csl-style.csl
```

If you prefer to use Pandoc's citation processing, set `citeproc: true` explicitly in YAML header:

``` yaml
citeproc: true
bibliography: refs.bib
  csl: https://www.zotero.org/styles/apa-with-abstract
```

To provide a citation style file to Pandoc's citation processing system use the `csl` option, as described in [Citation Style](https://quarto.org/docs/authoring/footnotes-and-citations.html#sec-citations-style).


## Typst Blocks

If you want to change the appearance of blocks using native [Typst `#block()`](https://typst.app/docs/reference/layout/block/) calls, you can add the `.block` class to a Div and provide whatever arguments are appropriate. For example:

```` markdown
::: {.block fill="luma(230)" inset="8pt" radius="4pt"}

This is a block with gray background and slightly rounded corners.

:::
````

This gets compiled to

```` default
#block(fill:luma(230), inset=8pt, radius=4pt, 
[This is a block with gray background and slightly rounded corners])
````

## Raw Typst 

If you want to use raw `typst` markup, use a raw `typst` block. For example:

```` default
```{=typst} 
#set par(justify: true)

== Background 
In the case of glaciers, fluid dynamics principles can be used to understand how the movement and behavior of the ice is influenced by factors such as temperature, pressure, and the presence of other fluids (such as water).
```
````

To learn more about `typst` markup, see the tutorial here: <https://typst.app/docs/tutorial/>.


## Typst File (`.typ`)

The rendering process produces a native Typst file (`.typ)` which is then compiled to PDF using the Typst CLI. This intermediate file is then automatically removed. If you want to preserve the `.typ` file, use the `keep-typ` option. For example:

``` yaml
---
title: "My Document"
format:
  typst:
    keep-typ: true
---
```

You can compile a `.typ` file to PDF directly using the `quarto typst compile` command in a terminal. For example:

``` {.bash filename="Terminal"}
$ quarto typst compile article.typ
```

The `quarto typst` command uses the version of Typst built in to Quarto and supports all Typst CLI actions and flags. For example, to determine the version of Typst embedded in Quarto:

``` {.bash filename="Terminal"}
$ quarto typst --version
```

## Fonts Support

The main font used for the document can be specified with the `mainfont` YAML option. Typst will search by default in installed system fonts. You can set additional paths to search using `font-paths`. For example: 

``` yaml
---
title: "My Document"
format: 
  typst:
    mainfont: "Agbalumo"
    font-paths: myfonts
---
```

This will search for a `*.ttf` or `*.otf` file matching the font name in the `./myfonts/` directory, in addition to searching in installed system fonts.

The `TYPST_FONT_PATHS` environment variable is also taken into account for compatibility with Typst configuration, but setting `font-paths` will take precedence over any path set in the `TYPST_FONT_PATHS` environment variable.

Set the base size of the font used in the document with `fontsize`. The size used in the default template is equivalent to:

```yaml
---
fontsize: 11pt
---
```


## Includes

{{< include /docs/output-formats/_document-options-includes.md >}}

For example:

``` yaml
format:
  typst:
    include-before-body:
      - text: |
          #show heading: set text(navy)
```

## Custom Formats {#custom-formats}

You can create highly customized output with Typst by defining a new format based on a custom Typst template. The Typst team has created several useful [templates](https://github.com/typst/templates), a few which which have been adapted for use with Quarto as custom formats. These formats include:

| Format                                                                         | Usage                                                      |
|--------------------------|----------------------------------------------|
| [Poster](https://github.com/quarto-ext/typst-templates/tree/main/poster)       | `quarto use template quarto-ext/typst-templates/poster`    |
| [IEEE](https://github.com/quarto-ext/typst-templates/tree/main/ieee)           | `quarto use template quarto-ext/typst-templates/ieee`      |
| [AMS](https://github.com/quarto-ext/typst-templates/tree/main/ams)             | `quarto use template quarto-ext/typst-templates/ams`       |
| [Letter](https://github.com/quarto-ext/typst-templates/tree/main/letter)       | `quarto use template quarto-ext/typst-templates/letter`    |
| [Fiction](https://github.com/quarto-ext/typst-templates/tree/main/fiction)     | `quarto use template quarto-ext/typst-templates/fiction`   |
| [Dept News](https://github.com/quarto-ext/typst-templates/tree/main/dept-news) | `quarto use template quarto-ext/typst-templates/dept-news` |

: {tbl-colwidths=\[20,80\]}

The source code for these formats is available at <https://github.com/quarto-ext/typst-templates>.

### Create a Format

To create a new custom Typst format (or package an existing Typst template for use with Quarto) use the `quarto create` command to get started:

``` {.bash filename="Terminal"}
$ quarto create extension format
```

Then, choose `typst` as the base format and provide a name for the extension (e.g. `letter`). A sample Typst format extension will be created based on the code used in the default template that ships with Quarto. It will include the following files which you can edit to implement your custom format:

| File                 | Description                                                                                                                                           |
|-------------------------|-----------------------------------------------|
| `_extension.yml`     | Basic extension metadata (name, author, description, etc.) and format definition.                                                                     |
| `README.md`          | Documentation on how to install and use the format.                                                                                                   |
| `template.qmd`       | A starter document that demonstrates the basics of the format.                                                                                        |
| `typst-template.typ` | The core Typst template function (documentation on creating Typst templates can be found here: <https://typst.app/docs/tutorial/making-a-template/>). |
| `typst-show.typ`     | File that calls the template's function (mapping Pandoc metadata to function arguments).                                                              |

Additional resources you might find useful when creating custom formats include:

-   The official Typst tutorial on [Making a Template](https://typst.app/docs/tutorial/making-a-template/)

-   List of third party templates from the [Awesome Quarto](https://github.com/qjcg/awesome-typst#templates--libraries) repo.

### Template Partials

::: callout-note
This section covers advanced customization of Typst format output and can be safely ignored unless you have found the method of defining custom Typst formats described above too limited.
:::

Above we describe a method of creating a Typst format based on specifying two [template partials](https://quarto.org/docs/journals/templates.html#template-partials) (`typst-template.typ` and `typst-show.typ`). These partials customize components of the default Typst Pandoc template, but leave some of the core scaffolding including definitions required by Pandoc for its Typst output as well as handling of bibliographies and footnotes (this means that your own custom Typst formats do not need to explicitly handle them).

If you would like to fully override the Pandoc template used for rendering Typst, use the `template` option in your custom format (rather than `template-partials`) and provide an alternate implementation of the default template. For example, your `_extensions.yml` might look like this:

``` {.yaml filename="_extensions.yml"}
title: Typst Custom Format
author: Jane Smith
version: "0.2.0"
quarto-required: ">=1.4.11"
contributes:
  formats:
    typst:
      template: template.typ
      template-partials:
        - typst-template.typ
        - typst-show.typ
```

Use the [source code](https://github.com/quarto-dev/quarto-cli/blob/main/src/resources/formats/typst/pandoc/quarto/template.typ) of the default template as a starting point for your `template.typ`. Note that you can call all of the template partials provided by Quarto (e.g. `biblio.typ()` or `notes.typ()`) from within your custom template implementation.

The [AMS](https://github.com/quarto-ext/typst-templates/tree/main/ams) format provides an example of redefining the main template (in that case, it is to prevent automatic bibliography processing by Quarto in deference to the built-in handling of the Typst AMS template).
