{
  "hash": "2d43c217d618d559ca4b321734cacf91",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"gt - temperatures\"\nformat:\n  typst: default\nbibliography: [] # suppress ../../../references.bib\nreferences:\n  - type: website\n    id: gt-cookbook\n    url: https://themockup.blog/static/resources/gt-cookbook.html#multiple-columns\n---\n\n```{=typst}\n#set page(\n  numbering: none\n)\n```\n\n::: {#1926f9f1 .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport numpy as np\n\ntemps = pd.DataFrame({\n  'year': [*range(1920, 1925)],\n  'Jan': [40.6, 44.2, 37.5, 41.8, 39.3], \n  'Jun': [58.5, 58.7, 57.8, 52.7, 57.7]\n}).set_index('year')\n\ndef make_pretty(styler):\n  styler.background_gradient(axis=None,\n    vmin=31, vmax=66, cmap=\"RdYlGn_r\")\n  return styler\n\ntemps.style.pipe(make_pretty)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">ImportError</span>                               Traceback (most recent call last)\nFile <span class=\"ansi-green-fg\">~/src/quarto-web/docs/blog/posts/2024-07-02-beautiful-tables-in-typst/.venv/lib/python3.12/site-packages/IPython/core/formatters.py:347</span>, in <span class=\"ansi-cyan-fg\">BaseFormatter.__call__</span><span class=\"ansi-blue-fg\">(self, obj)</span>\n<span class=\"ansi-green-fg ansi-bold\">    345</span>     method <span style=\"color:rgb(98,98,98)\">=</span> get_real_method(obj, <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>print_method)\n<span class=\"ansi-green-fg ansi-bold\">    346</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> method <span style=\"font-weight:bold;color:rgb(175,0,255)\">is</span> <span style=\"font-weight:bold;color:rgb(175,0,255)\">not</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span>:\n<span class=\"ansi-green-fg\">--&gt; 347</span>         <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> <span class=\"ansi-yellow-bg\">method</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    348</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span>\n<span class=\"ansi-green-fg ansi-bold\">    349</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">else</span>:\n\nFile <span class=\"ansi-green-fg\">~/src/quarto-web/docs/blog/posts/2024-07-02-beautiful-tables-in-typst/.venv/lib/python3.12/site-packages/pandas/io/formats/style.py:405</span>, in <span class=\"ansi-cyan-fg\">Styler._repr_html_</span><span class=\"ansi-blue-fg\">(self)</span>\n<span class=\"ansi-green-fg ansi-bold\">    400</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">\"\"\"</span>\n<span class=\"ansi-green-fg ansi-bold\">    401</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">Hooks into Jupyter notebook rich display system, which calls _repr_html_ by</span>\n<span class=\"ansi-green-fg ansi-bold\">    402</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">default if an object is returned at the end of a cell.</span>\n<span class=\"ansi-green-fg ansi-bold\">    403</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">\"\"\"</span>\n<span class=\"ansi-green-fg ansi-bold\">    404</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> get_option(<span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">styler.render.repr</span><span style=\"color:rgb(175,0,0)\">\"</span>) <span style=\"color:rgb(98,98,98)\">==</span> <span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">html</span><span style=\"color:rgb(175,0,0)\">\"</span>:\n<span class=\"ansi-green-fg\">--&gt; 405</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">to_html</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    406</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span>\n\nFile <span class=\"ansi-green-fg\">~/src/quarto-web/docs/blog/posts/2024-07-02-beautiful-tables-in-typst/.venv/lib/python3.12/site-packages/pandas/io/formats/style.py:1345</span>, in <span class=\"ansi-cyan-fg\">Styler.to_html</span><span class=\"ansi-blue-fg\">(self, buf, table_uuid, table_attributes, sparse_index, sparse_columns, bold_headers, caption, max_rows, max_columns, encoding, doctype_html, exclude_styles, **kwargs)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1342</span>     obj<span style=\"color:rgb(98,98,98)\">.</span>set_caption(caption)\n<span class=\"ansi-green-fg ansi-bold\">   1344</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># Build HTML string..</span>\n<span class=\"ansi-green-fg\">-&gt; 1345</span> html <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">obj</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_render_html</span><span class=\"ansi-yellow-bg\">(</span>\n<span class=\"ansi-green-fg ansi-bold\">   1346</span> <span class=\"ansi-yellow-bg\">    </span><span class=\"ansi-yellow-bg\">sparse_index</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">=</span><span class=\"ansi-yellow-bg\">sparse_index</span><span class=\"ansi-yellow-bg\">,</span>\n<span class=\"ansi-green-fg ansi-bold\">   1347</span> <span class=\"ansi-yellow-bg\">    </span><span class=\"ansi-yellow-bg\">sparse_columns</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">=</span><span class=\"ansi-yellow-bg\">sparse_columns</span><span class=\"ansi-yellow-bg\">,</span>\n<span class=\"ansi-green-fg ansi-bold\">   1348</span> <span class=\"ansi-yellow-bg\">    </span><span class=\"ansi-yellow-bg\">max_rows</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">=</span><span class=\"ansi-yellow-bg\">max_rows</span><span class=\"ansi-yellow-bg\">,</span>\n<span class=\"ansi-green-fg ansi-bold\">   1349</span> <span class=\"ansi-yellow-bg\">    </span><span class=\"ansi-yellow-bg\">max_cols</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">=</span><span class=\"ansi-yellow-bg\">max_columns</span><span class=\"ansi-yellow-bg\">,</span>\n<span class=\"ansi-green-fg ansi-bold\">   1350</span> <span class=\"ansi-yellow-bg\">    </span><span class=\"ansi-yellow-bg\">exclude_styles</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">=</span><span class=\"ansi-yellow-bg\">exclude_styles</span><span class=\"ansi-yellow-bg\">,</span>\n<span class=\"ansi-green-fg ansi-bold\">   1351</span> <span class=\"ansi-yellow-bg\">    </span><span class=\"ansi-yellow-bg\">encoding</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">=</span><span class=\"ansi-yellow-bg\">encoding</span><span class=\"ansi-yellow-bg\"> </span><span style=\"font-weight:bold;color:rgb(175,0,255)\" class=\"ansi-yellow-bg\">or</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">get_option</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">\"</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">styler.render.encoding</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">\"</span><span class=\"ansi-yellow-bg\">)</span><span class=\"ansi-yellow-bg\">,</span>\n<span class=\"ansi-green-fg ansi-bold\">   1352</span> <span class=\"ansi-yellow-bg\">    </span><span class=\"ansi-yellow-bg\">doctype_html</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">=</span><span class=\"ansi-yellow-bg\">doctype_html</span><span class=\"ansi-yellow-bg\">,</span>\n<span class=\"ansi-green-fg ansi-bold\">   1353</span> <span class=\"ansi-yellow-bg\">    </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">*</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">*</span><span class=\"ansi-yellow-bg\">kwargs</span><span class=\"ansi-yellow-bg\">,</span>\n<span class=\"ansi-green-fg ansi-bold\">   1354</span> <span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1356</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> save_to_buffer(\n<span class=\"ansi-green-fg ansi-bold\">   1357</span>     html, buf<span style=\"color:rgb(98,98,98)\">=</span>buf, encoding<span style=\"color:rgb(98,98,98)\">=</span>(encoding <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> buf <span style=\"font-weight:bold;color:rgb(175,0,255)\">is</span> <span style=\"font-weight:bold;color:rgb(175,0,255)\">not</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">else</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span>)\n<span class=\"ansi-green-fg ansi-bold\">   1358</span> )\n\nFile <span class=\"ansi-green-fg\">~/src/quarto-web/docs/blog/posts/2024-07-02-beautiful-tables-in-typst/.venv/lib/python3.12/site-packages/pandas/io/formats/style_render.py:204</span>, in <span class=\"ansi-cyan-fg\">StylerRenderer._render_html</span><span class=\"ansi-blue-fg\">(self, sparse_index, sparse_columns, max_rows, max_cols, **kwargs)</span>\n<span class=\"ansi-green-fg ansi-bold\">    192</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">_render_html</span>(\n<span class=\"ansi-green-fg ansi-bold\">    193</span>     <span style=\"color:rgb(0,135,0)\">self</span>,\n<span class=\"ansi-green-fg ansi-bold\">    194</span>     sparse_index: <span style=\"color:rgb(0,135,0)\">bool</span>,\n<span class=\"ansi-green-fg\">   (...)</span>\n<span class=\"ansi-green-fg ansi-bold\">    198</span>     <span style=\"color:rgb(98,98,98)\">*</span><span style=\"color:rgb(98,98,98)\">*</span>kwargs,\n<span class=\"ansi-green-fg ansi-bold\">    199</span> ) <span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">&gt;</span> <span style=\"color:rgb(0,135,0)\">str</span>:\n<span class=\"ansi-green-fg ansi-bold\">    200</span> <span style=\"color:rgb(188,188,188)\">    </span><span style=\"font-style:italic;color:rgb(175,0,0)\">\"\"\"</span>\n<span class=\"ansi-green-fg ansi-bold\">    201</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">    Renders the ``Styler`` including all applied styles to HTML.</span>\n<span class=\"ansi-green-fg ansi-bold\">    202</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">    Generates a dict with necessary kwargs passed to jinja2 template.</span>\n<span class=\"ansi-green-fg ansi-bold\">    203</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">    \"\"\"</span>\n<span class=\"ansi-green-fg\">--&gt; 204</span>     d <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_render</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">sparse_index</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">sparse_columns</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">max_rows</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">max_cols</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">\"</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">&amp;nbsp;</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">\"</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    205</span>     d<span style=\"color:rgb(98,98,98)\">.</span>update(kwargs)\n<span class=\"ansi-green-fg ansi-bold\">    206</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>template_html<span style=\"color:rgb(98,98,98)\">.</span>render(\n<span class=\"ansi-green-fg ansi-bold\">    207</span>         <span style=\"color:rgb(98,98,98)\">*</span><span style=\"color:rgb(98,98,98)\">*</span>d,\n<span class=\"ansi-green-fg ansi-bold\">    208</span>         html_table_tpl<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>template_html_table,\n<span class=\"ansi-green-fg ansi-bold\">    209</span>         html_style_tpl<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>template_html_style,\n<span class=\"ansi-green-fg ansi-bold\">    210</span>     )\n\nFile <span class=\"ansi-green-fg\">~/src/quarto-web/docs/blog/posts/2024-07-02-beautiful-tables-in-typst/.venv/lib/python3.12/site-packages/pandas/io/formats/style_render.py:161</span>, in <span class=\"ansi-cyan-fg\">StylerRenderer._render</span><span class=\"ansi-blue-fg\">(self, sparse_index, sparse_columns, max_rows, max_cols, blank)</span>\n<span class=\"ansi-green-fg ansi-bold\">    147</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">_render</span>(\n<span class=\"ansi-green-fg ansi-bold\">    148</span>     <span style=\"color:rgb(0,135,0)\">self</span>,\n<span class=\"ansi-green-fg ansi-bold\">    149</span>     sparse_index: <span style=\"color:rgb(0,135,0)\">bool</span>,\n<span class=\"ansi-green-fg\">   (...)</span>\n<span class=\"ansi-green-fg ansi-bold\">    153</span>     blank: <span style=\"color:rgb(0,135,0)\">str</span> <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">\"</span>,\n<span class=\"ansi-green-fg ansi-bold\">    154</span> ):\n<span class=\"ansi-green-fg ansi-bold\">    155</span> <span style=\"color:rgb(188,188,188)\">    </span><span style=\"font-style:italic;color:rgb(175,0,0)\">\"\"\"</span>\n<span class=\"ansi-green-fg ansi-bold\">    156</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">    Computes and applies styles and then generates the general render dicts.</span>\n<span class=\"ansi-green-fg ansi-bold\">    157</span> \n<span class=\"ansi-green-fg ansi-bold\">    158</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">    Also extends the `ctx` and `ctx_index` attributes with those of concatenated</span>\n<span class=\"ansi-green-fg ansi-bold\">    159</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">    stylers for use within `_translate_latex`</span>\n<span class=\"ansi-green-fg ansi-bold\">    160</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">    \"\"\"</span>\n<span class=\"ansi-green-fg\">--&gt; 161</span>     <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_compute</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    162</span>     dxs <span style=\"color:rgb(98,98,98)\">=</span> []\n<span class=\"ansi-green-fg ansi-bold\">    163</span>     ctx_len <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">len</span>(<span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>index)\n\nFile <span class=\"ansi-green-fg\">~/src/quarto-web/docs/blog/posts/2024-07-02-beautiful-tables-in-typst/.venv/lib/python3.12/site-packages/pandas/io/formats/style_render.py:256</span>, in <span class=\"ansi-cyan-fg\">StylerRenderer._compute</span><span class=\"ansi-blue-fg\">(self)</span>\n<span class=\"ansi-green-fg ansi-bold\">    254</span> r <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">self</span>\n<span class=\"ansi-green-fg ansi-bold\">    255</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">for</span> func, args, kwargs <span style=\"font-weight:bold;color:rgb(175,0,255)\">in</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>_todo:\n<span class=\"ansi-green-fg\">--&gt; 256</span>     r <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">func</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span class=\"ansi-yellow-bg\">)</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">*</span><span class=\"ansi-yellow-bg\">args</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">*</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">*</span><span class=\"ansi-yellow-bg\">kwargs</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    257</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> r\n\nFile <span class=\"ansi-green-fg\">~/src/quarto-web/docs/blog/posts/2024-07-02-beautiful-tables-in-typst/.venv/lib/python3.12/site-packages/pandas/io/formats/style.py:1709</span>, in <span class=\"ansi-cyan-fg\">Styler._apply</span><span class=\"ansi-blue-fg\">(self, func, axis, subset, **kwargs)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1707</span>     result <span style=\"color:rgb(98,98,98)\">=</span> DataFrame()\n<span class=\"ansi-green-fg ansi-bold\">   1708</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">elif</span> axis <span style=\"font-weight:bold;color:rgb(175,0,255)\">is</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span>:\n<span class=\"ansi-green-fg\">-&gt; 1709</span>     result <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">func</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">data</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">*</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">*</span><span class=\"ansi-yellow-bg\">kwargs</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1710</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> <span style=\"font-weight:bold;color:rgb(175,0,255)\">not</span> <span style=\"color:rgb(0,135,0)\">isinstance</span>(result, DataFrame):\n<span class=\"ansi-green-fg ansi-bold\">   1711</span>         <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> <span style=\"font-weight:bold;color:rgb(175,0,255)\">not</span> <span style=\"color:rgb(0,135,0)\">isinstance</span>(result, np<span style=\"color:rgb(98,98,98)\">.</span>ndarray):\n\nFile <span class=\"ansi-green-fg\">~/src/quarto-web/docs/blog/posts/2024-07-02-beautiful-tables-in-typst/.venv/lib/python3.12/site-packages/pandas/io/formats/style.py:3806</span>, in <span class=\"ansi-cyan-fg\">_background_gradient</span><span class=\"ansi-blue-fg\">(data, cmap, low, high, text_color_threshold, vmin, vmax, gmap, text_only)</span>\n<span class=\"ansi-green-fg ansi-bold\">   3803</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">else</span>:  <span style=\"font-style:italic;color:rgb(95,135,135)\"># else validate gmap against the underlying data</span>\n<span class=\"ansi-green-fg ansi-bold\">   3804</span>     gmap <span style=\"color:rgb(98,98,98)\">=</span> _validate_apply_axis_arg(gmap, <span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">gmap</span><span style=\"color:rgb(175,0,0)\">\"</span>, <span style=\"color:rgb(0,135,0)\">float</span>, data)\n<span class=\"ansi-green-fg\">-&gt; 3806</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">with</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">_mpl</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">Styler</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">background_gradient</span><span class=\"ansi-yellow-bg\">)</span><span class=\"ansi-yellow-bg\"> </span><span style=\"font-weight:bold;color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">as</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">_</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">_matplotlib</span><span class=\"ansi-yellow-bg\">)</span><span class=\"ansi-yellow-bg\">:</span>\n<span class=\"ansi-green-fg ansi-bold\">   3807</span> <span class=\"ansi-yellow-bg\">    </span><span class=\"ansi-yellow-bg\">smin</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">=</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">np</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">nanmin</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">gmap</span><span class=\"ansi-yellow-bg\">)</span><span class=\"ansi-yellow-bg\"> </span><span style=\"font-weight:bold;color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">if</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">vmin</span><span class=\"ansi-yellow-bg\"> </span><span style=\"font-weight:bold;color:rgb(175,0,255)\" class=\"ansi-yellow-bg\">is</span><span class=\"ansi-yellow-bg\"> </span><span style=\"font-weight:bold;color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">None</span><span class=\"ansi-yellow-bg\"> </span><span style=\"font-weight:bold;color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">else</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">vmin</span>\n<span class=\"ansi-green-fg ansi-bold\">   3808</span> <span class=\"ansi-yellow-bg\">    </span><span class=\"ansi-yellow-bg\">smax</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">=</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">np</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">nanmax</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">gmap</span><span class=\"ansi-yellow-bg\">)</span><span class=\"ansi-yellow-bg\"> </span><span style=\"font-weight:bold;color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">if</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">vmax</span><span class=\"ansi-yellow-bg\"> </span><span style=\"font-weight:bold;color:rgb(175,0,255)\" class=\"ansi-yellow-bg\">is</span><span class=\"ansi-yellow-bg\"> </span><span style=\"font-weight:bold;color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">None</span><span class=\"ansi-yellow-bg\"> </span><span style=\"font-weight:bold;color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">else</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">vmax</span>\n\nFile <span class=\"ansi-green-fg\">/opt/homebrew/Cellar/python@3.12/3.12.4/Frameworks/Python.framework/Versions/3.12/lib/python3.12/contextlib.py:137</span>, in <span class=\"ansi-cyan-fg\">_GeneratorContextManager.__enter__</span><span class=\"ansi-blue-fg\">(self)</span>\n<span class=\"ansi-green-fg ansi-bold\">    135</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">del</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>args, <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>kwds, <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>func\n<span class=\"ansi-green-fg ansi-bold\">    136</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">try</span>:\n<span class=\"ansi-green-fg\">--&gt; 137</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">next</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">gen</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    138</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">except</span> <span style=\"font-weight:bold;color:rgb(215,95,95)\">StopIteration</span>:\n<span class=\"ansi-green-fg ansi-bold\">    139</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">raise</span> <span style=\"font-weight:bold;color:rgb(215,95,95)\">RuntimeError</span>(<span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">generator didn</span><span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">t yield</span><span style=\"color:rgb(175,0,0)\">\"</span>) <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span>\n\nFile <span class=\"ansi-green-fg\">~/src/quarto-web/docs/blog/posts/2024-07-02-beautiful-tables-in-typst/.venv/lib/python3.12/site-packages/pandas/io/formats/style.py:98</span>, in <span class=\"ansi-cyan-fg\">_mpl</span><span class=\"ansi-blue-fg\">(func)</span>\n<span class=\"ansi-green-fg ansi-bold\">     96</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">yield</span> plt, mpl\n<span class=\"ansi-green-fg ansi-bold\">     97</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">else</span>:\n<span class=\"ansi-green-fg\">---&gt; 98</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">raise</span> <span style=\"font-weight:bold;color:rgb(215,95,95)\">ImportError</span>(<span style=\"color:rgb(175,0,0)\">f</span><span style=\"color:rgb(175,0,0)\">\"</span><span style=\"font-weight:bold;color:rgb(175,95,135)\">{</span>func<span style=\"color:rgb(98,98,98)\">.</span><span style=\"color:rgb(0,0,135)\">__name__</span><span style=\"font-weight:bold;color:rgb(175,95,135)\">}</span><span style=\"color:rgb(175,0,0)\"> requires matplotlib.</span><span style=\"color:rgb(175,0,0)\">\"</span>)\n\n<span class=\"ansi-red-fg\">ImportError</span>: background_gradient requires matplotlib.</pre>\n```\n:::\n\n:::\n\n::: {.cell-output .cell-output-display execution_count=1}\n```\n<pandas.io.formats.style.Styler at 0x1063c3e30>\n```\n:::\n:::\n\n\n",
    "supporting": [
      "pandas-temps_files/figure-html"
    ],
    "filters": [],
    "includes": {}
  }
}