{
  "hash": "cd7053457a9424b4284778b5ea778a83",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Pandas - Confusion Matrix\"\nformat: \n  typst: default\n  html:\n    format-links: false\nbibliography: []\nreferences:\n  - type: website\n    id: pandas-user-guide\n    url: https://pandas.pydata.org/pandas-docs/version/2.2.2/user_guide/style.html#Tooltips-and-Captions\n---\n\n```{=typst}\n#set page(numbering: none)\n```\n\n::: {#5542ba0c .cell .plain execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport numpy as np\n\ndf = pd.DataFrame([[38.0, 2.0, 18.0, 22.0, 21, np.nan],[19, 439, 6, 452, 226,232]],\n                  index=pd.Index(['Tumour (Positive)', 'Non-Tumour (Negative)'], name='Actual Label:'),\n                  columns=pd.MultiIndex.from_product([['Decision Tree', 'Regression', 'Random'],['Tumour', 'Non-Tumour']], names=['Model:', 'Predicted:']))\n\ns = df.style.format('{:.0f}').hide([('Random', 'Tumour'), ('Random', 'Non-Tumour')], axis=\"columns\")\n\ncell_hover = {  # for row hover use <tr> instead of <td>\n    'selector': 'td:hover',\n    'props': [('background-color', '#ffffb3')]\n}\nindex_names = {\n    'selector': '.index_name',\n    # darkgr[ae]y\n    'props': 'font-style: italic; color: #a9a9a9; font-weight:normal;'\n}\nheaders = {\n    'selector': 'th:not(.index_name)',\n    'props': 'background-color: #000066; color: white;'\n}\ns.set_table_styles([cell_hover, index_names, headers])\n\ns.set_table_styles([  # create internal CSS classes\n    {'selector': '.true', 'props': 'background-color: #e6ffe6;'},\n    {'selector': '.false', 'props': 'background-color: #ffe6e6;'},\n], overwrite=False)\ncell_color = pd.DataFrame([['true ', 'false ', 'true ', 'false '],\n                           ['false ', 'true ', 'false ', 'true ']],\n                          index=df.index,\n                          columns=df.columns[:4])\ns.set_td_classes(cell_color)\ns.set_table_styles([  # create internal CSS classes\n    {'selector': '.border-red', 'props': 'border: 2px dashed red;'},\n    {'selector': '.border-green', 'props': 'border: 2px dashed green;'},\n], overwrite=False)\ncell_border = pd.DataFrame([['border-green ', ' ', ' ', 'border-red '],\n                           [' ', ' ', ' ', ' ']],\n                          index=df.index,\n                          columns=df.columns[:4])\ns.set_td_classes(cell_color + cell_border)\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```{=html}\n<style type=\"text/css\">\n#T_a3262 td:hover {\n  background-color: #ffffb3;\n}\n#T_a3262 .index_name {\n  font-style: italic;\n  color: #a9a9a9;\n  font-weight: normal;\n}\n#T_a3262 th:not(.index_name) {\n  background-color: #000066;\n  color: white;\n}\n#T_a3262 .true {\n  background-color: #e6ffe6;\n}\n#T_a3262 .false {\n  background-color: #ffe6e6;\n}\n#T_a3262 .border-red {\n  border: 2px dashed red;\n}\n#T_a3262 .border-green {\n  border: 2px dashed green;\n}\n</style>\n<table id=\"T_a3262\">\n  <thead>\n    <tr>\n      <th class=\"index_name level0\" >Model:</th>\n      <th id=\"T_a3262_level0_col0\" class=\"col_heading level0 col0\" colspan=\"2\">Decision Tree</th>\n      <th id=\"T_a3262_level0_col2\" class=\"col_heading level0 col2\" colspan=\"2\">Regression</th>\n    </tr>\n    <tr>\n      <th class=\"index_name level1\" >Predicted:</th>\n      <th id=\"T_a3262_level1_col0\" class=\"col_heading level1 col0\" >Tumour</th>\n      <th id=\"T_a3262_level1_col1\" class=\"col_heading level1 col1\" >Non-Tumour</th>\n      <th id=\"T_a3262_level1_col2\" class=\"col_heading level1 col2\" >Tumour</th>\n      <th id=\"T_a3262_level1_col3\" class=\"col_heading level1 col3\" >Non-Tumour</th>\n    </tr>\n    <tr>\n      <th class=\"index_name level0\" >Actual Label:</th>\n      <th class=\"blank col0\" >&nbsp;</th>\n      <th class=\"blank col1\" >&nbsp;</th>\n      <th class=\"blank col2\" >&nbsp;</th>\n      <th class=\"blank col3\" >&nbsp;</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th id=\"T_a3262_level0_row0\" class=\"row_heading level0 row0\" >Tumour (Positive)</th>\n      <td id=\"T_a3262_row0_col0\" class=\"data row0 col0 true border-green \" >38</td>\n      <td id=\"T_a3262_row0_col1\" class=\"data row0 col1 false  \" >2</td>\n      <td id=\"T_a3262_row0_col2\" class=\"data row0 col2 true  \" >18</td>\n      <td id=\"T_a3262_row0_col3\" class=\"data row0 col3 false border-red \" >22</td>\n    </tr>\n    <tr>\n      <th id=\"T_a3262_level0_row1\" class=\"row_heading level0 row1\" >Non-Tumour (Negative)</th>\n      <td id=\"T_a3262_row1_col0\" class=\"data row1 col0 false  \" >19</td>\n      <td id=\"T_a3262_row1_col1\" class=\"data row1 col1 true  \" >439</td>\n      <td id=\"T_a3262_row1_col2\" class=\"data row1 col2 false  \" >6</td>\n      <td id=\"T_a3262_row1_col3\" class=\"data row1 col3 true  \" >452</td>\n    </tr>\n  </tbody>\n</table>\n```\n:::\n:::\n\n\n",
    "supporting": [
      "pandas-confusion-matrix_files/figure-html"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}